version: '3.8'

services:
  # Backend API Server
  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    container_name: magicnetwork-backend
    ports:
      - "${BACKEND_PORT:-5000}:5000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=${DATABASE_URL}
      - SESSION_SECRET=${SESSION_SECRET}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - CLOUDFLARE_API_TOKEN=${CLOUDFLARE_API_TOKEN}
      - CLOUDFLARE_ZONE_ID=${CLOUDFLARE_ZONE_ID}
    volumes:
      - .:/app
      - /app/node_modules
      - ./tests:/app/tests
    networks:
      - magicnetwork
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1:5000/api/cards/search?query=test&limit=1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  # Frontend React App
  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
    container_name: magicnetwork-frontend
    ports:
      - "${FRONTEND_PORT:-5173}:5173"
    environment:
      - VITE_API_URL=http://localhost:${BACKEND_PORT:-5000}
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - magicnetwork
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5173"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Test Runner (optional service for running tests)
  test-runner:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    container_name: magicnetwork-tests
    environment:
      - NODE_ENV=test
      - DATABASE_URL=${DATABASE_URL}
      - SESSION_SECRET=${SESSION_SECRET}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    volumes:
      - .:/app
      - /app/node_modules
      - ./docker/test-package.json:/app/test-package.json
    networks:
      - magicnetwork
    depends_on:
      backend:
        condition: service_healthy
    profiles:
      - testing
    command: ["sh", "-c", "cp test-package.json package-test.json && npm run --prefix . test --silent || echo 'Running tests directly...' && node tests/comprehensive-api.test.js"]

networks:
  magicnetwork:
    driver: bridge

volumes:
  node_modules: